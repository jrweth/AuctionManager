{% extends "layout.html.twig" %}

{% block content %}
{% if blockItemEntry %}
    <style>
        div.bbs-model-item .bbs-edit,
        div.bbs-model-item .bbs-delete,
        div.bbs-model-item .bbs-addNew {
            display: none
        }
    </style>{% endif %}
{% endblock %}

{% block customJS %}
<script type="text/javascript" src="{{ webRoot }}modelDefs.js"></script>
<script type="text/javascript">
    var init = {
        options: {
            debug: true,
            apiRoot: '{{ webRoot}}api/',
            modelInitOrder: ['category', 'contact', 'item', 'item_contact']
        },
        templates: {
          scaffold: '<div class="bbs-scaffold"> \
                  <ul class="bbs-modelMenu nav navbar-nav" style="display: none"></ul></div> \
      			<div class="bbs-loading">Loading...</div>\
              <div class="bbs-models" style="clear:both"    ></div> \
           </div>',
          modelListTableActions: '<td><button class="bbs-edit btn">edit</button></td> \
            <td><button class="bbs-delete btn">delete</button> \
         </td>',
         model: '<div class="bbs-model bbs-model-<%- name %>" style="display: none"> \
            <h1 class="bbs-modelHeader"><%- label %></h1> \
            <div class="bbs-modelSubSections"> \
               <div class="bbs-modelList bbs-modelSubSection"> \
                  <div class="bbs-modelAddNew" style="margin-bottom: 10px"> \
                     <button class="bbs-addNew btn btn-primary">add new</button> \
                  </div> \
               </div> \
               <div class="bbs-modelEdit bbs-modelSubSection"></div> \
               <div class="bbs-modelDetail bbs-modelSubSection"></div> \
            </div> \
         </div>',
         modelListTable: '<table class="bbs-modelListTable table table-striped"><thead><th width="50px">&#160</th><th width="50px">&#160</th> \
            <% for(columnName in columns) { if (columns[columnName].listDisplayView != "none") { %> \
            <th><%- columns[columnName].label %></th> \
         <% }} %> \
         </thead><tbody></tbody></table>',
         modelEditActions: '<div class="bbs-editActions" style="margin-top: 20px"> \
            <button class="bbs-save btn btn-primary">save</button> \
            <button class="bbs-cancel btn">cancel</button> \
         </div>',
         modelEditRemoveRelated: '<a class="bbs-delete btn btn-mini" style="cursor: pointer">remove</a>',
         modelEditAddRelated: '<a class="bbs-addRelated btn btn-mini" style="cursor: pointer">add</a>'
        },
        modelDefs: $.bbscaffoldModelDefs
    };
    $.extend( true, $.fn.DataTable.TableTools.classes, {
        "container": "btn-group",
        "buttons": {
            "normal": "btn",
            "disabled": "btn disabled"
        }
    });
    $.bbscaffold = new BackboneScaffold(init);
    $.bbscaffold.views.modelView = BackboneScaffold.prototype.defaults.views.modelView.extend({
        addAll: function() {
            //initiate the data table
            
            $table = this.$el.find('.bbs-modelListTable');
            $table.dataTable().fnDestroy();
            
            this.scaffold.debugLog('Adding All rows for model ' + this.modelName);
            this.$el.find('.bbs-modelListTable tbody').html(''); // clean the list
            this.collection.each(this.addOne, this);

            $table.dataTable({
                "sDom": "<'row'<'span4'<'row'<'span12'f>><'row'<'span12' i l>>><'span6'rT>><'row'<'span12't>>",
                "bScrollCollapse": true,
                "bPaginate": false,
                "bStateSave": false,
                "oTableTools": {
                    "sSwfPath": "{{ webRoot }}TableTools/swf/copy_csv_xls_pdf.swf",
                    "aButtons": ["copy", "csv", "pdf"]
                },
                "aaSorting": [[ 2, "asc" ]],
                "aoColumnDefs": [
                {
                    bSortable: false,
                    aTargets: [ 0, 1 ]
                 }
               ]
            });
        },
    });
    //hack for including just item number in purchase entry
    $.bbscaffold.views.modelColumnItemNumber = $.bbscaffold.views.modelColumnLookup.extend({
        initialize: function() {
            this.scaffold = this.options.scaffold;
            this.modelName = this.options.modelName;
            this.columnName = 'item_id';
            this.model = this.options.model;
            
            //get some helper attributes
            this.modelDef = this.scaffold.modelDefs[this.modelName];
            this.columnDef = this.modelDef.columns[this.columnName];
            this.relatedModelDef = this.scaffold.modelDefs[this.columnDef.relatedModelName];
            this.relatedCollection = this.relatedModelDef.backboneCollection;
    
            //if the related column is set then get the related model
            this.onChange();
            this.model.on('change', this.onChange, this);
        },
        render: function() {
            this.$el.html('');
            if(this.columnValue) {
                if(this.relatedModel != undefined) {
                    this.$el.html(this.relatedModel.get('item_order_number'));
                }
            }
            return this;
        }
    });
    $.bbscaffold.setupScaffold('#content');
</script>
{% endblock %}