{% extends "layout.html.twig" %}

{% block content %}

<div id="container"></div>

{% endblock %}


{% block customJS %}
<script type="text/javascript">
    var init = {
        options: {
            debug: true,
            apiRoot: '{{ webRoot}}api/',
            modelInitOrder: ['category', 'contact', 'item', 'item_contact']
        },
        modelDefs: {
            contact: {
                label: 'Contacts',
                columns: {
                    first_name: {},
                    last_name: {},
                    auction_group_id: {
                        listDisplayType: 'none',
                        editDisplayType: 'hidden',
                        defaultValue: '{{ auctionGroupId }}'
                    }
                },
                modelToString: function(model, modelDef) {
                    return model.get('first_name') + ' ' + model.get('last_name');
                }
            },
            category: {
                label: 'Categories',
                columns: {
                    name: {},
                    auction_group_id: {
                        listDisplayType: 'none',
                        editDisplayType: 'hidden',
                        defaultValue: '{{ auctionGroupId }}'
                    }
                },
                modelToString: function(model, modelDef) {
                    return model.get('name');
                }
            },
            item: {
                label: 'Items',
                modelToString: function(model, modelDef) {
                    return model.get('title');
                },
                columns: {
                    auction_id: {
                        listDisplayType: 'none',
                        editDisplayType: 'hidden',
                        defaultValue: '{{ auctionId }}'
                    },
                    title: {},
                    donor_display_name: {},
                    description: {},
                    category_id: {
                        label: 'category',
                        listDisplayType: 'collectionLookup',
                        editDisplayType: 'collectionDropdown',
                        emptyOption: 'Choose One...',
                        relatedModelName: 'category'
                    },
                    item_contacts: {
                        label: 'contacts',
                        listDisplayType: 'collectionHasMany',
                        editDisplayType: 'collectionEmbeddedForm',
                        relatedModelName: 'item_contact'
                    }
                },
                relatedModels: {
                    item_contact: {
                        joinColumn: 'id',
                        relatedJoinColumn: 'item_id',
                        relatedModelName: 'item_contact'
                    },
                    category: {
                        joinColumn: 'category_id',
                        relatedJoinColumn: 'id',
                        relatedModelName: 'category'
                    }
                }
            },
            item_contact: {
                label: 'Donors',
                modelToString: function(model, modelDef, scaffold) {
                    var contactModelDef = scaffold.modelDefs.contact;
                    var contactModel = contactModelDef.backboneCollection.findWhere({id: model.get('contact_id')});
                    return contactModelDef.modelToString(contactModel, contactModelDef, scaffold);
                },
                columns: {
                    contact_id: {
                        label: 'contact',
                        listDisplayType: 'collectionLookup',
                        editDisplayType: 'collectionDropdown',
                        emptyOption: 'Choose One...',
                        relatedModelName: 'contact'
                    },
                    item_id: {
                        label: 'item',
                        listDisplayType: 'collectionLookup',
                        editDisplayType: 'collectionDropdown',
                        emptyOption: 'Choose One...',
                        relatedModelName: 'item'
                    }
                },
                relatedModels: {
                    contact: {
                        joinColumn: 'contact_id',
                        relatedJoinColumn: 'id',
                        relatedModelName: 'contact'
                    },
                    item: {
                        joinColumn: 'item_id',
                        relatedJoinColumn: 'id',
                        relatedModelName: 'item'
                    },
                }
            }
        }
    };
    $.bbscaffold = new BackboneScaffold(init);
    
    $.bbscaffold.setupScaffold('#container');
</script>
{% endblock %}